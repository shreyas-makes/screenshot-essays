// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import { initFormatters } from './formatters'
import type { Locales, Translations } from './i18n-types'
import { loadedFormatters, loadedLocales, locales } from './i18n-util'

import cs from './cs'
import da from './da'
import de from './de'
import en from './en'
import es from './es'
import fr from './fr'
import hu from './hu'
import id from './id'
import ja from './ja'
import ko from './ko'
import ms from './ms'
import nl from './nl'
import no from './no'
import pl from './pl'
import pt from './pt'
import ro from './ro'
import ru from './ru'
import zh from './zh'

const localeTranslations = {
	cs,
	da,
	de,
	en,
	es,
	fr,
	hu,
	id,
	ja,
	ko,
	ms,
	nl,
	no,
	pl,
	pt,
	ro,
	ru,
	zh,
}

export const loadLocale = (locale: Locales): void => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations
	loadFormatters(locale)
}

export const loadAllLocales = (): void => locales.forEach(loadLocale)

export const loadFormatters = (locale: Locales): void =>
	void (loadedFormatters[locale] = initFormatters(locale))
