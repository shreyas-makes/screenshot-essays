import process from 'node:process';
import esbuild from 'esbuild';
import builtins from 'builtin-modules';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';

const result = await esbuild
  .build({
    banner: {
      js: banner,
    },
    legalComments: 'external',
    define: {
      'process.env.NODE_ENV': '"production"',
    },
    entryPoints: ['main.ts'],
    bundle: true,
    external: [
      'obsidian',
      'electron',
      '@codemirror/autocomplete',
      '@codemirror/collab',
      '@codemirror/commands',
      '@codemirror/language',
      '@codemirror/lint',
      '@codemirror/search',
      '@codemirror/state',
      '@codemirror/view',
      '@lezer/common',
      '@lezer/highlight',
      '@lezer/lr',
      ...builtins,
    ],
    format: 'cjs',
    // watch: !prod,
    target: 'esnext',
    logLevel: 'info',
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    outfile: 'main.js',
    metafile: true,
    // minify: true,
  })
  // eslint-disable-next-line unicorn/no-process-exit
  .catch(() => process.exit(1));

if (result.metafile) {
  console.log(
    await esbuild.analyzeMetafile(result.metafile, {
      verbose: true,
    }),
  );
}
